@ Collection

-> 메모리상에서 자료를 구조적으로 처리하는 방법을 자료구조라고 함
-> 컬렉션 (Collection)은 자바에서 제공하는 자료구조를 담당하는 프래암 워크임
	* 프레임 워크 : 개발을 수월하게 하기 위해 다양한 기능을 제공하는 도구
-> 추가, 삭제, 정렬등의 기능처리가 간단하게 해결되어 자료구조적 알고리즘을
사용자가 별도로 구현할 필요가 없음

@ 자료구조란?
-> 데이터(자료) 를 메모리에서 구조적으로 처리하는 방법론


@ 배열의 한계점
1. 한번 크기를 지정하면 변경할 수 없음
-> 공간의 크기가 부족하면 에러가 발생하기 때문에, 할당시 넉넉한 크기로 할당 하게됨
	(메모리 낭비가 심함)
-> 필요에 따라 늘리거나 줄일수 없음.

2. 배열에 기록된 데이터에 대한 중간 위치의 추가, 삭제가 어려움
-> 데이터를 중간에 추가 하려면 새로운 배열을 만들고 각 데이터들을 뒤로 하나씩 이동한 후 중간에 넣어 주어야함
-> 데이터를 중간에 삭제 하려면 새로운 배열을 만들고 데이터를 삭제 후 남은 각 데이터들을 앞으로 한칸씩 가져와야함.

3. 한 타입의 데이터만 저장이 가능함 (다양한 데이터 타입 처리는 불가능)


@ 컬렉션(Colledtion)의 장점

1. 저장하는 크기의 제약이없음
	(데이터를 추가할대마다 자동으로 늘어남)

2. 추가, 삭제, 정렬 등의 기능처리가 간단하게 해결됨
-> 자료를 구조적으로 처리하는 자료구조가 내장되어 알고리즘 구현이 필요 없음

3. 여러 타입을 저장 할 수 있음
-> 객체만 저장할 수 있음
-> 필요에 따라 기본 자료형을 저장해야 하는 경우에는 Wrapper 클래스를 사용함.


@ 컬렉션 주요 인터페이스
-> 컬렉션은 크게 2개의 인터페이스로 나눌수있음
	-Collection , Map


## Collection ##
- List 계열 (ArrayList, Vector, LinkedList)
	=> 순서를 유지하고 저장
	=> 중복 저장 가능

- Set 계열 (HashSet, TreeSet)
	=> 순서를 유지하지 않고 저장
	=> 중복 저징이 안됨

- Queue 계열
	=> FIFO구조
	=> 들어온 순서대로 데이터를 저장하고 뺄수있음


## Map ##
-> List 와 Set을 합친 구조
-> 키와 쌍이되는 값으로 저장됨
-> 키는 중복저장 안됨. (Set 속성)
-> 값은 중복 저장 가능( List 속성)
-> 종류 : HashMap, HshTable, TreeMap, Properties