@ is a 상속
-> A is a B : A 는 B 다라는 뜻
-> 즉, A는 B를 상속받아 결국 A는 B의 것을 가지게 됨
-> 객체 지향 프로그래밍에서는 상속이라는 개념을 사용함
	*상속이라는 뜻은 유산 상속과 같음
	가령 아버지(부모)가 아들(자식에게 유산을 상속하게 되면
	아들은 아버지의 유산을 상속 받게 되어 재산이 늘어나게 됨

아버지의 재산 : 10억
아들의 재산 : 1억

## 생각해보자 ##
만약 아버지가 아들에게 유산 상속을 하게 되었을때 아들의 재산은 얼마가 되겠는가?

상속받은 필드가 private 이라면?
-> 자식 클래스에서는 상속 받은 필드가 private 되어있으면 직접적인 접근은 불가능하다.
-> 그러나 상속받은 필드에 접근할 필요성이 있을때에즌 크게 3가지 방법을 통해 접근할수 있다.

1. 필드를 private 으로 선언하지 않고 protected로 선언하는 방법.
2. 부모의 setter를 이용하는 방법
3. 부모 생성자를 호출하는 방법.(키워드 super)
	- super 키워드는 부모 생성자를 호출하는 키워드
	- 자식 생성자에서 사용할수있는 키워드
