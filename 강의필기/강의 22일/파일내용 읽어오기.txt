@ 파일 내용을 읽어올때에는 InputStream 혹은  Reader를 사용함

	public StreamTest() 
	{	
		BufferedReader bfr;

			try {
				String line = null;
				bfr = new BufferedReader(new FileReader("text.txt"));
				
//				for(int lineNumber = 1;(line=bfr.readLine())!=null;lineNumber++)
//				{
//					System.out.println(lineNumber + " : " + line);
//				}
				
				while(true)
				{
					line = bfr.readLine();
					if(line == null)
					{  	
						bfr.close();
						break;
					}
					else System.out.println(line);
				}
			}
			catch(FileNotFoundException e)
			{
				e.printStackTrace();
			}
			catch (IOException e) {
				e.printStackTrace();
			}
	}		
	
	public void outpuStringTest()
	{
		FileOutputStream fOut = null;
		DataOutputStream dOut = null;// 보조스트림
		BufferedWriter bfw = null;
		
		FileWriter fw = null;
		System.out.print("저장할 파일 명:");
		String fileName = sc.next();
		sc.nextLine();
		String str ="";
	
		System.out.println("'" + fileName+"'" + "파일에 저장될 내용 입력 ");
		
			try {
				bfw = new BufferedWriter(new FileWriter("d:\\"+fileName));
//				fw = new FileWriter("d:\\"+fileName);
//				dOut = new DataOutputStream(new FileOutputStream("d:\\"+fileName));
				int lineNumber = 1;
				while(!str.equals("exit"))
				{
					System.out.print( (lineNumber++) + " : ");
					str = sc.nextLine();
					String sentence =(lineNumber-1)+" : " +str;
					if(str.equals("exit")) 
					{
						System.out.println("종료합니다.");
						bfw.close();
//						fw.close();
						break;
					}		
					bfw.write(sentence);
					bfw.newLine();
//					fw.write(sentence + System.lineSeparator());
				
//					dOut.writeBytes(sentence + System.getProperty("line.separator"));
//					dOut.writeChars(sentence.getBytes());						
				}
			}
		
			catch (FileNotFoundException e) {
				e.printStackTrace();
			}	
			catch (IOException e) {
					e.printStackTrace();
			}
	}